### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.MapOptions
  commentId: T:CoreWCF.Configuration.MapOptions
  id: MapOptions
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.MapOptions.Branch
  - CoreWCF.Configuration.MapOptions.Predicate
  langs:
  - csharp
  - vb
  name: MapOptions
  nameWithType: MapOptions
  fullName: CoreWCF.Configuration.MapOptions
  type: Class
  source:
    remote:
      path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
      branch: main
      repo: https://github.com/samsp-msft/CoreWCF.git
    id: MapOptions
    path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
    startLine: 11
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF.Configuration
  summary: "\nOptions for the <xref href=\"CoreWCF.Configuration.MapMiddleware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class MapOptions : object'
    content.vb: >-
      Public Class MapOptions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CoreWCF.Configuration.MapOptions.Predicate
  commentId: P:CoreWCF.Configuration.MapOptions.Predicate
  id: Predicate
  parent: CoreWCF.Configuration.MapOptions
  langs:
  - csharp
  - vb
  name: Predicate
  nameWithType: MapOptions.Predicate
  fullName: CoreWCF.Configuration.MapOptions.Predicate
  type: Property
  source:
    remote:
      path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
      branch: main
      repo: https://github.com/samsp-msft/CoreWCF.git
    id: Predicate
    path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
    startLine: 16
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF.Configuration
  summary: "\nThe path to match.\n"
  example: []
  syntax:
    content: public Func<FramingConnection, bool> Predicate { get; set; }
    parameters: []
    return:
      type: Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}
    content.vb: Public Property Predicate As Func(Of FramingConnection, Boolean)
  overload: CoreWCF.Configuration.MapOptions.Predicate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CoreWCF.Configuration.MapOptions.Branch
  commentId: P:CoreWCF.Configuration.MapOptions.Branch
  id: Branch
  parent: CoreWCF.Configuration.MapOptions
  langs:
  - csharp
  - vb
  name: Branch
  nameWithType: MapOptions.Branch
  fullName: CoreWCF.Configuration.MapOptions.Branch
  type: Property
  source:
    remote:
      path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
      branch: main
      repo: https://github.com/samsp-msft/CoreWCF.git
    id: Branch
    path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapOptions.cs
    startLine: 21
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF.Configuration
  summary: "\nThe branch taken for a positive match.\n"
  example: []
  syntax:
    content: public HandshakeDelegate Branch { get; set; }
    parameters: []
    return:
      type: CoreWCF.Configuration.HandshakeDelegate
    content.vb: Public Property Branch As HandshakeDelegate
  overload: CoreWCF.Configuration.MapOptions.Branch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CoreWCF.Configuration.MapMiddleware
  commentId: T:CoreWCF.Configuration.MapMiddleware
  name: MapMiddleware
  nameWithType: MapMiddleware
  fullName: CoreWCF.Configuration.MapMiddleware
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.MapOptions.Predicate*
  commentId: Overload:CoreWCF.Configuration.MapOptions.Predicate
  name: Predicate
  nameWithType: MapOptions.Predicate
  fullName: CoreWCF.Configuration.MapOptions.Predicate
- uid: Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}
  commentId: '!:Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}'
  definition: Func`2
  name: Func<FramingConnection, Boolean>
  nameWithType: Func<FramingConnection, Boolean>
  fullName: Func<CoreWCF.Channels.Framing.FramingConnection, System.Boolean>
  nameWithType.vb: Func(Of FramingConnection, Boolean)
  fullName.vb: Func(Of CoreWCF.Channels.Framing.FramingConnection, System.Boolean)
  name.vb: Func(Of FramingConnection, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Channels.Framing.FramingConnection
    name: FramingConnection
    nameWithType: FramingConnection
    fullName: CoreWCF.Channels.Framing.FramingConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Channels.Framing.FramingConnection
    name: FramingConnection
    nameWithType: FramingConnection
    fullName: CoreWCF.Channels.Framing.FramingConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CoreWCF.Configuration.MapOptions.Branch*
  commentId: Overload:CoreWCF.Configuration.MapOptions.Branch
  name: Branch
  nameWithType: MapOptions.Branch
  fullName: CoreWCF.Configuration.MapOptions.Branch
- uid: CoreWCF.Configuration.HandshakeDelegate
  commentId: T:CoreWCF.Configuration.HandshakeDelegate
  parent: CoreWCF.Configuration
  name: HandshakeDelegate
  nameWithType: HandshakeDelegate
  fullName: CoreWCF.Configuration.HandshakeDelegate
