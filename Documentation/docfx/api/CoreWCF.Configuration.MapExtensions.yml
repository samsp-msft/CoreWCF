### YamlMime:ManagedReference
items:
- uid: CoreWCF.Configuration.MapExtensions
  commentId: T:CoreWCF.Configuration.MapExtensions
  id: MapExtensions
  parent: CoreWCF.Configuration
  children:
  - CoreWCF.Configuration.MapExtensions.Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder,Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean},Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder})
  langs:
  - csharp
  - vb
  name: MapExtensions
  nameWithType: MapExtensions
  fullName: CoreWCF.Configuration.MapExtensions
  type: Class
  source:
    remote:
      path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapExtensions.cs
      branch: main
      repo: https://github.com/samsp-msft/CoreWCF.git
    id: MapExtensions
    path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapExtensions.cs
    startLine: 11
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF.Configuration
  summary: "\nExtension methods for the <xref href=\"CoreWCF.Configuration.MapMiddleware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public static class MapExtensions : object'
    content.vb: >-
      Public Module MapExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CoreWCF.Configuration.MapExtensions.Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder,Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean},Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder})
  commentId: M:CoreWCF.Configuration.MapExtensions.Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder,Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean},Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder})
  id: Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder,Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean},Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder})
  isExtensionMethod: true
  parent: CoreWCF.Configuration.MapExtensions
  langs:
  - csharp
  - vb
  name: Map(IFramingConnectionHandshakeBuilder, Func<FramingConnection, Boolean>, Action<IFramingConnectionHandshakeBuilder>)
  nameWithType: MapExtensions.Map(IFramingConnectionHandshakeBuilder, Func<FramingConnection, Boolean>, Action<IFramingConnectionHandshakeBuilder>)
  fullName: CoreWCF.Configuration.MapExtensions.Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder, Func<CoreWCF.Channels.Framing.FramingConnection, System.Boolean>, Action<CoreWCF.Configuration.IFramingConnectionHandshakeBuilder>)
  type: Method
  source:
    remote:
      path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapExtensions.cs
      branch: main
      repo: https://github.com/samsp-msft/CoreWCF.git
    id: Map
    path: src/CoreWCF.NetTcp/src/CoreWCF/Configuration/MapExtensions.cs
    startLine: 21
  assemblies:
  - CoreWCF.NetTcp
  namespace: CoreWCF.Configuration
  summary: "\nBranches the handshake pipeline based on the result of a predicate. \nIf the predicate returns true the branch is executed.\n"
  example: []
  syntax:
    content: public static IFramingConnectionHandshakeBuilder Map(this IFramingConnectionHandshakeBuilder handshakeBuilder, Func<FramingConnection, bool> predicate, Action<IFramingConnectionHandshakeBuilder> configuration)
    parameters:
    - id: handshakeBuilder
      type: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
      description: The <xref href="CoreWCF.Configuration.IFramingConnectionHandshakeBuilder" data-throw-if-not-resolved="false"></xref> instance.
    - id: predicate
      type: Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}
      description: The request path to match.
    - id: configuration
      type: Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder}
      description: The branch to take for positive path matches.
    return:
      type: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
      description: The <xref href="CoreWCF.Configuration.IFramingConnectionHandshakeBuilder" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Map(handshakeBuilder As IFramingConnectionHandshakeBuilder, predicate As Func(Of FramingConnection, Boolean), configuration As Action(Of IFramingConnectionHandshakeBuilder)) As IFramingConnectionHandshakeBuilder
  overload: CoreWCF.Configuration.MapExtensions.Map*
  nameWithType.vb: MapExtensions.Map(IFramingConnectionHandshakeBuilder, Func(Of FramingConnection, Boolean), Action(Of IFramingConnectionHandshakeBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CoreWCF.Configuration.MapExtensions.Map(CoreWCF.Configuration.IFramingConnectionHandshakeBuilder, Func(Of CoreWCF.Channels.Framing.FramingConnection, System.Boolean), Action(Of CoreWCF.Configuration.IFramingConnectionHandshakeBuilder))
  name.vb: Map(IFramingConnectionHandshakeBuilder, Func(Of FramingConnection, Boolean), Action(Of IFramingConnectionHandshakeBuilder))
references:
- uid: CoreWCF.Configuration.MapMiddleware
  commentId: T:CoreWCF.Configuration.MapMiddleware
  name: MapMiddleware
  nameWithType: MapMiddleware
  fullName: CoreWCF.Configuration.MapMiddleware
- uid: CoreWCF.Configuration
  commentId: N:CoreWCF.Configuration
  name: CoreWCF.Configuration
  nameWithType: CoreWCF.Configuration
  fullName: CoreWCF.Configuration
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
  commentId: T:CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
  parent: CoreWCF.Configuration
  name: IFramingConnectionHandshakeBuilder
  nameWithType: IFramingConnectionHandshakeBuilder
  fullName: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
- uid: CoreWCF.Configuration.MapExtensions.Map*
  commentId: Overload:CoreWCF.Configuration.MapExtensions.Map
  name: Map
  nameWithType: MapExtensions.Map
  fullName: CoreWCF.Configuration.MapExtensions.Map
- uid: Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}
  commentId: '!:Func{CoreWCF.Channels.Framing.FramingConnection,System.Boolean}'
  definition: Func`2
  name: Func<FramingConnection, Boolean>
  nameWithType: Func<FramingConnection, Boolean>
  fullName: Func<CoreWCF.Channels.Framing.FramingConnection, System.Boolean>
  nameWithType.vb: Func(Of FramingConnection, Boolean)
  fullName.vb: Func(Of CoreWCF.Channels.Framing.FramingConnection, System.Boolean)
  name.vb: Func(Of FramingConnection, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Channels.Framing.FramingConnection
    name: FramingConnection
    nameWithType: FramingConnection
    fullName: CoreWCF.Channels.Framing.FramingConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Channels.Framing.FramingConnection
    name: FramingConnection
    nameWithType: FramingConnection
    fullName: CoreWCF.Channels.Framing.FramingConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder}
  commentId: '!:Action{CoreWCF.Configuration.IFramingConnectionHandshakeBuilder}'
  definition: Action`1
  name: Action<IFramingConnectionHandshakeBuilder>
  nameWithType: Action<IFramingConnectionHandshakeBuilder>
  fullName: Action<CoreWCF.Configuration.IFramingConnectionHandshakeBuilder>
  nameWithType.vb: Action(Of IFramingConnectionHandshakeBuilder)
  fullName.vb: Action(Of CoreWCF.Configuration.IFramingConnectionHandshakeBuilder)
  name.vb: Action(Of IFramingConnectionHandshakeBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
    name: IFramingConnectionHandshakeBuilder
    nameWithType: IFramingConnectionHandshakeBuilder
    fullName: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
    name: IFramingConnectionHandshakeBuilder
    nameWithType: IFramingConnectionHandshakeBuilder
    fullName: CoreWCF.Configuration.IFramingConnectionHandshakeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  commentId: '!:Action`1'
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
